<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>imnoise</title>
</head>
<body bgcolor="#FFFFFF">
<center>SIVP Toolbox</center>
<div align="right">Last update : July, 2006</div>
<p><b>imnoise</b> - Add noise (gaussian, etc.) to an image</p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>imn = imnoise(im, type [,parameters])</tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<b><tt>im</tt></b>:
       Input image.
     </li>
<li>
<b><tt>type</tt></b>:
       String having one of these values:
       <ul>
<li>
<b><tt>'salt &amp; pepper'</tt></b>:
	     drop-out/On-off noise
	   </li>
<li>
<b><tt>'speckle'</tt></b>:
	     multiplicative noise
	   </li>
<li>
<b><tt>'gaussian'</tt></b>:
	     Gaussian white/additive noise
	   </li>
<li>
<b><tt>'localvar'</tt></b>:
             Pixel-specific  variance  (Zero-mean Gaussian)
           </li>
<li>
<b><tt>'poisson'</tt></b>:
             Not yet implemented
           </li>
</ul>
</li>
<li>
<b><tt>parameters</tt></b>:
       A sequence of parameters to control the noise distribution, depending on the chosen type. If omitted, default values are used (see below).
     </li>
<li>
<b><tt>imn</tt></b>:
       Noisy image, which has the same size and type as input image <tt>im</tt>.
     </li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt>imnoise(im, type [, parameters])</tt> adds a type of noise 
to the intensity image <tt>im</tt>. 
Optionally, you can control the noise parameters starting at the 3rd. Argument to imnoise. 
Here are  example of noise types and their parameterss: </p>
<p><tt>imn = imnoise(im,'salt &amp; pepper',d)</tt> adds drop-out noise, 
where <tt>d</tt> is the noise density (probability of swapping a  pixel). (default: d=0.05). </p>
<p><tt>imn = imnoise(im,'gaussian',m,v)</tt> adds Gaussian additive noise  of mean m and variance v. (default: m=0 and v=0.01) </p>
<p><tt>im = imnoise(im,'localvar',V)</tt> additive zero-mean Gaussian 
noise where the variance at im(i,j) is V(i,j). </p>
<p><tt>imn = imnoise(im,'localvar', intensity, V)</tt> 
additive zero-mean Gaussian noise,
and the local variance of the noise, var, 
is a function of the image intensity values in <tt>im</tt>. 
The variance is <tt>matrix( interp1(intensity(:),V(:),im(:)), size(im) )</tt></p>
<p><tt>imn = imnoise(im,'speckle',v)</tt> adds multiplicative noise, 
using <tt>imn = im + noise*im</tt>, 
where noise is uniformly distributed  with mean 0 and variance v. (default: v=0.04) </p>
<p>
By default, we consider that  "1" corresponds to the maximum intensity value of the image,
and "0" to minimum.
If the input image <tt>im</tt> is an integer image, 
it will be converted to double using <tt>im2double</tt> function first.
Before return the result, the image will be converted to the same type as the input image.
The elements in the output matrix <tt>imn</tt> 
that exceed the range of the integer or double type will be truncated. 
</p>
<p>
  Supported classes: INT8, UINT8, INT16, UINT16, INT32, DOUBLE.
</p>
<h3><font color="blue">Examples</font></h3>
<pre>

    im = imread('lena.png');

    imn = imnoise(im, 'gaussian');
    imshow(imn);

    imn = imnoise(im, 'salt &amp; pepper');
    imshow(imn);

    imn = imnoise(im(:,:,1), 'salt &amp; pepper', 0.2);
    imshow(imn);

    lowtri = tril(ones(im(:,:,1)));
    imn = imnoise( im(:,:,1), 'localvar', lowtri/5);
    imshow(imn);

    imn = imnoise( im(:,:,1), 'localvar', [0:0.1:1], [0:0.1:1].^3);
    imshow(imn);

    imn = imnoise(im, 'speckle' );
    imshow(imn);

</pre>
<h3><font color="blue">Bugs and Shortcomings</font></h3>
<p>
'poisson' noise is not yet implemented.
</p>
<h3><font color="blue">Authors</font></h3>
<dl>
<dd>
<b></b> Shiqi Yu &lt;shiqi.yu[at]gmail.com&gt; </dd>
<dd>
<b></b> Ricardo Fabbri &lt;ricardofabbri [at] users.sf.net&gt; </dd>
</dl>
<h3><font color="blue">Availability</font></h3>
The latest version of SIVP can be found at
<p><a href="http://sivp.sourceforge.net">http://sivp.sourceforge.net</a></p>
<h3><font color="blue">See Also</font></h3>
<p></p>
</body>
</html>
