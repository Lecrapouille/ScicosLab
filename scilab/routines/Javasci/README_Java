Dec. 7th 2009

The Java problem derives from the library created inside "routines/Javasci" because "libtool" refuses to create a shared library with the *.a from scilab. As consequence "libjavasci.so" does not contains "scimem " and others scilab symbols.

The solution is to bypass libtool and manually patch the "Makelib" forcing the link with *.a. This method does not works everywhere. 

ScicosLab must be compiled with the option "-with_java" :

       sh autogen.sh
       ./configure --with-java

Make sure that ScicosLab has correctly detected Java
....
checking for javac... yes
checking for javac... /usr/bin/javac
checking symlink for /usr/bin/javac... /etc/alternatives/javac
checking symlink for /etc/alternatives/javac... /usr/lib/jvm/java-6-sun/bin/javac
checking for java headers...  /usr/lib/jvm/java-6-sun/include /usr/lib/jvm/java-6-sun/include/linux
....
We suggest to use SUN Java SDK (other versions could be not compatible).

After a successful compilation, replace the Makelib file

       cp Makelib_Java Makelib

and recompile the shared library

       make -f Makelib clean
       make -f Makelib

the last command replace the old library with the new one. 

On some systems you may be obliged to copy "include/jni.h" and "/include/linux/jni_md.h"
       cp /usr/lib/jvm/java-6-sun-1.6.0.16/include/jni.h .
       cp /usr/lib/jvm/java-6-sun-1.6.0.16/include/linux/jni_md.h  .
to the local folder.

If you want to use the ScicosLab/Java gateway make sure that the following environment variables are set

# "javadev"
# Export some environment variable to enable the use
# of the Scilab / Java interface 
#
export SCIDIR=<absolute_path_to_bin/scilab>
export SCI=<absolute_path_to_bin/scilab>
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SCIDIR/bin:.
export CLASSPATH=$CLASSPATH:$SCIDIR/bin:.
export TK_LIBRARY=$SCIDIR/tcl/
export TCL_LIBRARY=$SCIDIR/tcl/

make the above file executable 

        chmod +x javadev

and run it using 

         . ./javadev

BEWARE THE BIZARRE SYNTAX ! 



//*---------------------------- original mail in French -----------------------------------
Paris, Nov. 9th 2009 
From: Jean-Philippe Chancelier
TO  : Simone Mannori

Le pb avec java vient de la librairie crée dans "routines/Javasci" car libtool va refuser de créer une librairie partagée avec les *.a de scilab. En conséquence libjavasci.so ne contient entre autres pas scimem.

La solution est de bypasser libtool et de forcer un link avec les *.a (ce qui ne marche pas partout mais sur linux oui si les .o qui sont dans les .a sont compatible avec PIC).

Possible que sur Linux récent ça marche plus.

Pour ce faire il suffit de remplacer le Makelib qui est dans Javasci par celui joint

      cp Makelib_Java Makelib

puis de faire

       make -f Makelib clean
       make -f Makelib

A la fin il va écrire

       Creation of libjavasci1.so
       linking without libtool

La librairie libjavasci.so copiée dans ../../bin est alors bcp + grosse ( 22 Mega ).

//**-------------------------------------------------------------------------------------------------------

The patched "Makelib" file:

# generated by builder.sce: Please do not edit this file
# ------------------------------------------------------
include ../../Path.incl
include ../../Makefile.incl
include ../../Makefile.OBJ
OBJS =  javasci_globals.o \
    javasci_SciComplexArray.o \
    javasci_SciDoubleArray.o  \
    javasci_Scilab2.o         \
    javasci_Scilab.o          \
    javasci_SciStringArray.o
JAVAINC=
FLIBS= -L/usr/lib/gcc/i486-linux-gnu/4.3.3 -L/usr/lib/gcc/i486-linux-gnu/4.3.3/../../../../lib -L/lib/../lib -L/usr/lib/../lib -L/usr/lib/gcc/i486-linux-gnu/4.3.3/../../.. -lgfortranbegin -lgfortran -lm
LIBRARY = libjavasci.a
include $(SCIDIR)/Makefile.incl
CFLAGS = $(CC_OPTIONS) -DmexFunction=mex_$* $(JAVAINC)
FFLAGS = $(FC_OPTIONS) -Dmexfunction=mex$* $(JAVAINC)
OTHERLIBS= $(LIBR) $(TCLTK_LIBS) $(XLIBS) $(TERMCAPLIB) $(FLIBS)
EXTRA_LDFLAGS =
include ../../config/Makeso.incl


distclean ::
         @$(RM) ../../bin/libjavasci.so
         @$(RM) libjavasci.*


# options compilation a modifier sous hp & solaris


LIBRARY1= libjavasci1.so

all ::   $(LIBRARY1)

$(LIBRARY1): $(OBJS)
       @echo Creation of $(LIBRARY1)
       @$(RM) $@;
       @echo "linking without libtool";
       @$(FC) -shared -g -o $@ $(OBJS) $(DEFAULTS) $(LIBR) $(TCLTK_LIBS) $(XLIBS) $(TERMCAPLIB);
       @cp -f libjavasci1.so ../../bin/libjavasci.so


