#/* -*- Mode: Makefile -*- */

SCIVERSION=ScicosLab-svn

RM = rm -f
AR = ar cr
FILES_TO_CLEAN = *.ln *.BAK *.bak core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut .*~ *.trace so_locations *.orig *.obj

all::

clean::
	@echo Cleaning
	@$(RM) $(FILES_TO_CLEAN)
distclean::
	@$(RM) $(FILES_TO_CLEAN)

RANLIB = ranlib

TERMCAPLIB = -lreadline -lncurses

##################################################################
# NOTE: the following schemes for compiling and linking are not  #
#       exactly used for the main executable scilex; for it, see #
#       the files Makefile.<host>                                #
##################################################################

############
# C++ compiler
CXX= g++
CXX_OPTIONS= -g -O2
CXX_CPP =  g++ -E

############
# C compiler
# typically, for compiling use: CFLAGS = $(CC_OPTIONS)
# and for linking: $(CC) -o $(PROGRAM) $(OBJS) $(CC_LDFLAGS)
###########
CC = gcc
CCPLUS =  -Wno-unused-but-set-variable -Wno-unused-result 
CC_OPTIONS = -g  -Dlinux -Wall `/usr/bin/pkg-config gtk+-2.0 --cflags`  $(CCPLUS) 
CC_OPTIONS1 = -g -Dlinux -Wall `/usr/bin/pkg-config gtk+-2.0 --cflags`
CC_LDFLAGS =   -ldl -rdynamic -Wl,-relax
CC_PICFLAGS = -fPIC

##################
# Fortran compiler
# typically, for compiling use: FFLAGS = $(FC_OPTIONS)
# and for linking: $(FC) -o $(PROGRAM) $(OBJS) $(FC_LDFLAGS)
##################
FC = f77
FCPLUS = -Wno-conversion -Wno-unused-dummy-argument -Wno-unused -Wno-uninitialized -Wno-unused-but-set-variable
FC_OPTIONS = -g  -Wall  $(FCPLUS) 
FC_OPTIONS1 = -g -Wall  $(FCPLUS) 
FC_LDFLAGS =   -ldl -rdynamic -Wl,-relax
FC_PICFLAGS = -fPIC

########
# Linker
# typically, for linking: $(LD) -o $(PROGRAM) $(OBJS) $(LD_LDFLAGS)
########
LD = /usr/bin/ld -m elf_x86_64
LD_LDFLAGS = 
EXEEXT=


#####################
# expat
#####################
EXPAT_LIBS = -lexpat

##########
# X Window: use $(XFLAGS) for compilation and $(XLIBS) for linking
# typically, for compiling use: CFLAGS = $(CC_OPTIONS) $(XFLAGS)
# and for linking with X Window
#  with C compiler: $(CC) -o $(PROGRAM) $(OBJS) $(CC_LDFLAGS) $(XLIBS)
#  with Fortran compiler: $(FC) -o $(PROGRAM) $(OBJS) $(FC_LDFLAGS) $(XLIBS)
#  with linker: $(LD) -o $(PROGRAM) $(OBJS) $(LD_LDFLAGS) $(XLIBS)
##########
DLDLIB = 
DLD_SUBDIR = 
PVMROOT = /usr/local/src/scicoslab-svnrepos/scicoslab-sosie/scilab/pvm3
#PVMROOT=$(SCIDIR)/pvm3
PVMLIB = /usr/local/src/scicoslab-svnrepos/scicoslab-sosie/scilab/pvm3/lib/LINUXX86_64/libpvm3.a
PVMGLIB = /usr/local/src/scicoslab-svnrepos/scicoslab-sosie/scilab/pvm3/lib/LINUXX86_64/libgpvm3.a
PVMINCLUDE = /usr/local/src/scicoslab-svnrepos/scicoslab-sosie/scilab/pvm3/include
XAWLIB = 
XMULIB = 
XAW_LOCAL_SUBDIR = 
XAW_LOCAL_LIB = 
XFLAGS =  
X_EXTRA_LIBS = 
XXTXEXT= 
XX11 = 
XLIBS = `/usr/bin/pkg-config gtk+-2.0 gthread-2.0 --libs`  $(XAWLIB) $(XMULIB) $(XXTXEXT)  $(XX11) $(X_EXTRA_LIBS) -lexpat

#####################
# TCL/TK
#####################
TKBASE =
#TKBASE=$(SCIDIR)
TK_INC_PATH = -I/usr/include/tcl8.6
TCL_INC_PATH = -I/usr/include/tcl8.6
TCLTK_LIBS = -L/usr/lib/x86_64-linux-gnu -ltk8.6 -L/usr/lib/x86_64-linux-gnu -ltcl8.6

#####################
# for WIN32 version
# win32 libraries for gcwin32
WIN32LIBS=-mwindows -lwsock32 -lshell32 -lcomctl32 -lwinspool -lm
WINLIBS = $(TCLTK_LIBS) $(EXPAT_LIBS) $(WIN32LIBS)
LINKEROPT= $(LD_LDFLAGS)
# Ressource compiler
RC = 
RCVARS = -O coff
