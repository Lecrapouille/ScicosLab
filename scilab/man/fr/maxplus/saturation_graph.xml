<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>saturation_graph  </TITLE>
  <TYPE>Maxplus Function  </TYPE>
  <DATE>   </DATE>
  <SHORT_DESCRIPTION name="saturation_graph ">  saturation graph ( flowshop graph ) ( maxplus )  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>gh=Lsaturation_graph(g)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>gh=Rsaturation_graph(g)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>g  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    :  flowshop graph built with flowshop_graph
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>gh  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : saturation graph of g
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    Computes the left (L) and right (R) saturation graph,  that
    is the arcs that saturate the left/right generalized eigenvector
    equality of a bivalued graph. The generalized eigenelements
    are  computed by semihoward.
  </P>
  <P>
    The right saturation graph is  the
    graph where saturating predecessors of i are
    the nodes belonging to { j :  Aij Vj = Vi }, where Aij denotes
    the  weight associated to the edge from node j to node i. 
    The corresponding graph  is called G(A&apos;), it uses the dynamical
    system orientation convention which is the opposite of
    the one used for Markov (called G(A)). 
  </P>
  <P>
    The left saturation graph is the graph where the set of 
    the saturating successors of i is  { j : Vj Aji = Vi }.
  </P>
  <P>
    In particular, they can be used to see the bottleneck of event-graphs.
    In this case  A is the matrix with entries T-Nxdiag(l)
    [resp. T-diag(l)xN] for the right [resp. left] saturation graph 
    where T denotes the processing times,
    N the initial marking and l are the generalized eigenvalues.
    For an irreducible event graph there exists a unique eigenvalue
    and l is a vector with constant entries equal to this eigen
    value.
  </P>
  <P>
  </P>
  <P>
  </P>
  <P>
    - The graph must have a structure analogous to the
    one generated by flowshop_graph.
  </P>
  <P>
    - Sometimes, it is useful to move the position of
    the nodes (with the metanet editor) to see the special
    structures of these saturation graphs.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
PT=#([2,1;%0,1;4,%0]);
xsetech([0 0 0.5 0.5]);
[g,T,N]=flowshop_graph(PT,[1,1,1],[2,2],50);

// Right saturation graph
show_graph(Rsaturation_graph(g));
[l,v]=semihoward(T,N)
(#(full(T))-full(#(plustimes(N)*diag(plustimes(l)))))*v==v

// Left saturation graph
show_graph(Lsaturation_graph(g));
[l,v]=semihoward(T',N')
v'*(#(full(T))-full(#(diag(plustimes(l))*plustimes(N))))==v'
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>maxplus</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>flowshop_graph</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>flowshop</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>show_cr_graph</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
