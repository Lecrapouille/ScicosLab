<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>maxplus  </TITLE>
  <TYPE>Maxplus Function  </TYPE>
  <DATE>   </DATE>
  <SHORT_DESCRIPTION name="maxplus "> (#)  maxplus type constructor  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>B=maxplus(A)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>A  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : standard full or sparse matrix
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>B  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : maxplus full or sparse matrix 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    Sets the type to maxplus-full if A is full or maxplus-sparse if A is
    sparse.
  </P>
  <P>
    Many of the standard operators and functions have a maxplus analogue
    which overloads the standard operator and which is not documented.
  </P>
  <P>
    When one applies a standard operator or a function, which has a meaning
    in the maxplus algebra, with at least one argument of maxplus type,
    the operator is interpreted in the maxplus sense and the result has
    a maxplus type.
  </P>
  <P>
    The internal numper type of a full maxplus matrix or constant is
    257. The internal type number of a sparse matix is 261.
  </P>
  <P>
    The overloading of maxplus function is obtained by adding
    the prefix %talg_ to the corresponding standard name 
    in the definition of the function. If %talg_tutu(A) has been
    defined, tutu(A) with A a full maxplus matrix calls %talg_tutu(A).
    For sparse maxplus matrix the prefix is %mps_ .
  </P>
  <P>
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
typeof(maxplus(1))
type(maxplus(1))
typeof(maxplus(sparse(1)))
typeof(maxplus([1,2;3,4]))
typeof(maxplus(sparse([1,0;0,1])))
typeof(#(1))
typeof(#(sparse(1)))
#(3)+#(3)
#(3)*#(3)
a=[#(1),2;3,4]
typeof(a)
a*a
a==a
a(:,1)
a(5,5)=5
typeof(a)
size(a)
sum(a)
prod(a)
diag([%1,%1])
a=[%1,2;3,4]
triu(a)
tril(a)
sum(a)
prod(a)
sign(a)
a.*.a // kronecker product of maxplus matrices
clean([%1,-1.e12])
a=[%1,0.2,-0.7,1.d0]
floor(a)
ceil(a)
typeof(1+#(1))
1+#(1)
typeof(#(1)+1)
#(1)+1
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>plustimes</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>type</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>typeof</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>clean</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>diag</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>sum</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>prod</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>kron</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>floor</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>ceil</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>diag</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>triu</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>tril</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>size</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>sign</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>full</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>sparse</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>save</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>load</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
